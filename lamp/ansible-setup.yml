- hosts: localhost
  tasks:
  - name: download create-instance.sh
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/create-instance.sh
       dest: .
       force: yes

  - name: run cloud-init
    shell: bash create-instance.sh
    environment:
        MYSSHKEYNAME: 'bastion-to-other-hosts-key'
        
  - name: Get private IP of the new instance
    command: "aws ec2 describe-instances --filters "Name=tag:Name,Values=lamp" "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].{Instance:PrivateIpAddress}" --output=text"
      register: command_output
  - debug: msg="{{command_output.stdout}}"

  - set_fact:
    LAMP_INST_IP: "{{ command_output.stdout }}"
    
  - name: add host to group 'just_created' with variable foo=42
    add_host:
      name: "{{ ip_from_ec2 }}"
      groups: just_created
    
- hosts: just_created
  become: true
  tasks:
  
  - name: download cloud-init
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/cloud-init.sh
       dest: .
       force: yes

  - name: run cloud-init
    shell: bash cloud-init.sh

  - name: download add-ingress-to-secgrp.sh
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/utils/add-ingress-to-secgrp.sh
       dest: .
       force: yes

  - name: SSH access to bastion
    shell: bash add-ingress-to-secgrp.sh lamp-secgrp outgoing-from-bastion-secgrp 22


  - name: port 80 access to loadbalancer
    shell: bash add-ingress-to-secgrp.sh lamp-secgrp outgoing-from-loadbalancer-secgrp 80
    
  - name: port 443 access to loadbalancer
    shell: bash add-ingress-to-secgrp.sh lamp-secgrp outgoing-from-loadbalancer-secgrp 443
    
  - name: download configure apache
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/configure-apache.sh
       dest: .
       force: yes

  - name: run configure-apache.sh
    shell: bash configure-apache.sh

  - name: download configure-tls.sh
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/configure-tls.sh
       dest: .
       force: yes

  - name: run configure-tls.sh
    shell: bash configure-tls.sh

  - name: download configure-tls.sh
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/secure-db.sh
       dest: .
       force: yes
       
  - name: Secure the database server
    shell:
      cmd: bash secure-db.sh
      stdin: "{{mysql_root_password}}"
    no_log: true

  - name: download phpAdmin-install-config.sh
    get_url:
       url: https://raw.githubusercontent.com/praveensiddu/aws/main/lamp/phpAdmin-install-config.sh
       dest: .
       force: yes

  - name: run phpAdmin-install-config.sh
    shell: bash phpAdmin-install-config.sh
    

